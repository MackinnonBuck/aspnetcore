@page "/Account/Manage/PasswordlessAuthentication"

@using Microsoft.AspNetCore.Http.Features
@using Microsoft.AspNetCore.Identity
@using MyBlazorApp.Data

@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject IdentityUserAccessor UserAccessor
@inject IdentityRedirectManager RedirectManager

<PageTitle>Passwordless authentication</PageTitle>

<StatusMessage />
<h3>Passwordless authentication</h3>
@if (canTrack)
{
    if (hasPublicKey)
    {
        <div class="alert alert-success">
            <strong>Passwordless authentication is enabled.</strong>
            <p>You can <a href="Account/Manage/DisablePasswordlessAuthentication">disable passwordless authentication</a>.</p>
        </div>
    }
    else
    {
        <a href="Account/Manage/EnablePasswordlessAuthentication" class="btn btn-primary">Enable passwordless authentication</a>
    }
}
else
{
    <div class="alert alert-danger">
        <strong>Privacy and cookie policy have not been accepted.</strong>
        <p>You must accept the policy before you can enable two factor authentication.</p>
    </div>
}

@code {
    private bool canTrack;
    private bool hasPublicKey;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        var user = await UserAccessor.GetRequiredUserAsync(HttpContext);
        canTrack = HttpContext.Features.Get<ITrackingConsentFeature>()?.CanTrack ?? true;
        hasPublicKey = await UserManager.HasPublicKeyAsync(user);
    }
}
